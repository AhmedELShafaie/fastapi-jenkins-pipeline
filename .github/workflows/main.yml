name: FastAPI app CI/CD

on: [push, pull_request, workflow_dispatch]

jobs:

  flake8:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide

  pytest:
    name: Unit Testing
    needs: flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        pip install --upgrade pip pytest pytest-cov pytest-html pytest-sugar pytest-json-report
        py.test -v --cov --html=reports/pytest/report.html
    - name: Archive pytest coverage results
      uses: actions/upload-artifact@v1
      with:
        name: pytest-coverage-report
        path: reports/pytest/

# Optional:
# security_checks:
#    needs: pytest
#    runs-on: ubuntu-latest
#    name: Security check
#    steps:
#      - uses: actions/checkout@v2
#      - name: Run PyCharm Security
#        uses: tonybaloney/pycharm-security@master
#        with:
#          path: src/

  docker_cicd:
    name: Build Image
    # needs: security_checks # Mind the optional previous step!
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DH_USERNAME_RB }}
          password: ${{ secrets.DH_PASSWORD_RB }}
          repository: rbalashevich/fastapi_app
          tags: latest

  heroku_deploy:
     name: Deploy Image
     needs: docker_cicd
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
       - uses: akhileshns/heroku-deploy@v3.12.12
         with:
           heroku_api_key: ${{ secrets.HEROKU_API_KEY_RB }}
           heroku_app_name: ${{ secrets.HEROKU_APP_RB }} #Must be unique in Heroku
           heroku_email: ${{ secrets.HEROKU_EMAIL_RB }}
           usedocker: true

